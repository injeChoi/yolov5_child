import os
import sys
import platform
from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(677, 322)
        self.frame_1 = QtWidgets.QFrame(Dialog)
        self.frame_1.setGeometry(QtCore.QRect(20, 20, 631, 43))
        self.frame_1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_1.setObjectName("frame_1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.file = QtWidgets.QLabel(self.frame_1)
        self.file.setObjectName("file")
        self.horizontalLayout.addWidget(self.file)
        self.file_path = QtWidgets.QLabel(self.frame_1)
        self.file_path.setObjectName("file_path")
        self.horizontalLayout.addWidget(self.file_path)
        self.file_browse = QtWidgets.QPushButton(self.frame_1)
        self.file_browse.setObjectName("file_browse")
        self.horizontalLayout.addWidget(self.file_browse)
        self.file_browse.clicked.connect(self.file_open)

        self.frame_2 = QtWidgets.QFrame(Dialog)
        self.frame_2.setGeometry(QtCore.QRect(20, 100, 631, 40))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.up_category = QtWidgets.QLabel(self.frame_2)
        self.up_category.setObjectName("up_category")
        self.horizontalLayout_2.addWidget(self.up_category)
        self.up = QtWidgets.QComboBox(self.frame_2)
        self.up.setObjectName("up")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.up.addItem("")
        self.horizontalLayout_2.addWidget(self.up)
        self.up_category_color = QtWidgets.QLabel(self.frame_2)
        self.up_category_color.setObjectName("up_category_color")
        self.horizontalLayout_2.addWidget(self.up_category_color)
        self.up_color = QtWidgets.QComboBox(self.frame_2)
        self.up_color.setObjectName("up_color")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.up_color.addItem("")
        self.horizontalLayout_2.addWidget(self.up_color)

        self.frame_3 = QtWidgets.QFrame(Dialog)
        self.frame_3.setGeometry(QtCore.QRect(20, 180, 631, 40))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.down_category = QtWidgets.QLabel(self.frame_3)
        self.down_category.setObjectName("down_category")
        self.horizontalLayout_3.addWidget(self.down_category)
        self.down = QtWidgets.QComboBox(self.frame_3)
        self.down.setObjectName("down")
        self.down.addItem("")
        self.down.addItem("")
        self.down.addItem("")
        self.down.addItem("")
        self.horizontalLayout_3.addWidget(self.down)
        self.down_category_color = QtWidgets.QLabel(self.frame_3)
        self.down_category_color.setObjectName("down_category_color")
        self.horizontalLayout_3.addWidget(self.down_category_color)
        self.down_color = QtWidgets.QComboBox(self.frame_3)
        self.down_color.setObjectName("down_color")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.down_color.addItem("")
        self.horizontalLayout_3.addWidget(self.down_color)

        self.frame_4 = QtWidgets.QFrame(Dialog)
        self.frame_4.setGeometry(QtCore.QRect(20, 260, 631, 40))
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.execute = QtWidgets.QPushButton(self.frame_4)
        self.execute.setObjectName("execute")
        self.horizontalLayout_4.addWidget(self.execute)
        self.reset = QtWidgets.QPushButton(self.frame_4)
        self.reset.setObjectName("reset")
        self.horizontalLayout_4.addWidget(self.reset)
        self.execute.clicked.connect(self.execute_dialog)
        self.reset.clicked.connect(self.reset_dialog)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.file.setText(_translate("Dialog", "FILE :"))
        self.file_path.setText(_translate("Dialog", "FILE_PATH"))
        self.file_browse.setText(_translate("Dialog", "Browse"))
        self.up_category.setText(_translate("Dialog", "TOP :"))
        self.up.setItemText(0, _translate("Dialog", "Short Sleeve Top"))
        self.up.setItemText(1, _translate("Dialog", "Long Sleeve Top"))
        self.up.setItemText(2, _translate("Dialog", "Short Sleeve Outwear"))
        self.up.setItemText(3, _translate("Dialog", "Long Sleeve Outwear"))
        self.up.setItemText(4, _translate("Dialog", "Vest"))
        self.up.setItemText(5, _translate("Dialog", "Sling"))
        self.up.setItemText(6, _translate("Dialog", "Short Sleeve Dress"))
        self.up.setItemText(7, _translate("Dialog", "Long Sleeve Dress"))
        self.up.setItemText(8, _translate("Dialog", "Vest Dress"))
        self.up.setItemText(9, _translate("Dialog", "Sling Dress"))
        self.up_category_color.setText(_translate("Dialog", "COLOR :"))
        self.up_color.setItemText(0, _translate("Dialog", "RED"))
        self.up_color.setItemText(1, _translate("Dialog", "ORANGE"))
        self.up_color.setItemText(2, _translate("Dialog", "YELLOW"))
        self.up_color.setItemText(3, _translate("Dialog", "CHARTREUSE GREEN"))
        self.up_color.setItemText(4, _translate("Dialog", "GREEN"))
        self.up_color.setItemText(5, _translate("Dialog", "SPRING GREEN"))
        self.up_color.setItemText(6, _translate("Dialog", "CYAN"))
        self.up_color.setItemText(7, _translate("Dialog", "AZURE"))
        self.up_color.setItemText(8, _translate("Dialog", "BLUE"))
        self.up_color.setItemText(9, _translate("Dialog", "VIOLET"))
        self.up_color.setItemText(10, _translate("Dialog", "MAGENTA"))
        self.up_color.setItemText(11, _translate("Dialog", "ROSE"))
        self.down_category.setText(_translate("Dialog", "PANT :"))
        self.down.setItemText(0, _translate("Dialog", "Shorts"))
        self.down.setItemText(1, _translate("Dialog", "Trousers"))
        self.down.setItemText(2, _translate("Dialog", "Skirt"))
        self.down.setItemText(3, _translate("Dialog", "None"))
        self.down_category_color.setText(_translate("Dialog", "COLOR :"))
        self.down_color.setItemText(0, _translate("Dialog", "RED"))
        self.down_color.setItemText(1, _translate("Dialog", "ORANGE"))
        self.down_color.setItemText(2, _translate("Dialog", "YELLOW"))
        self.down_color.setItemText(3, _translate("Dialog", "CHARTREUSE GREEN"))
        self.down_color.setItemText(4, _translate("Dialog", "GREEN"))
        self.down_color.setItemText(5, _translate("Dialog", "SPRING GREEN"))
        self.down_color.setItemText(6, _translate("Dialog", "CYAN"))
        self.down_color.setItemText(7, _translate("Dialog", "AZURE"))
        self.down_color.setItemText(8, _translate("Dialog", "BLUE"))
        self.down_color.setItemText(9, _translate("Dialog", "VIOLET"))
        self.down_color.setItemText(10, _translate("Dialog", "MAGENTA"))
        self.down_color.setItemText(11, _translate("Dialog", "ROSE"))
        self.execute.setText(_translate("Dialog", "EXECUTE"))
        self.reset.setText(_translate("Dialog", "RESET"))

    def file_open(self):
        _translate = QtCore.QCoreApplication.translate
        FileOpen = QtWidgets.QFileDialog.getOpenFileName(self.file_browse, 'Open file', './')
        self.file_path.setText(_translate("Dialog", FileOpen[0]))

    def execute_dialog(self):
        self.reset.setEnabled(False)
        os.system(f'mkdir video')
        os.system(f'ffmpeg -i {self.file_path.text()} -r 1 ./video/%d.jpg')

        if platform.system() == "Windows":
            pass
            # Person Detect
            #os.system(f'python3 detect.py --class 0 --save-crop --weights ./weights/yolov5x6.pt --source video --augment --project ./ --name person')

            # Child Detect
            # os.system(f'python3 detect_child.py --save-crop --weights child 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name child')

            # Fashion Detect + Color Detect (detect_fashion.py에 Color Detect 필요)
            #os.system(f'python3 detect_fashion.py --save-crop --weights deepfashion2 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name fashion')

            # Accessories Detect
            # os.system(f'python3 detect_accessory.py --save-crop --weights 악세사리 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name accessory')
        else:
            pass
            # Person Detect
            #os.system(f'python detect.py --class 0 --save-crop --weights ./weights/yolov5x6.pt --source video --augment --project ./ --name person')

            # Child Detect
            os.system(f'python3 detect_child.py --save-crop --weights child 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name child')

            # Fashion Detect + Color Detect (detect_fashion.py에 Color Detect 필요)
            #os.system(f'python detect_fashion.py --save-crop --weights deepfashion2 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name fashion')

            # Accessories Detect
            # os.system(f'python detect_accessory.py --save-crop --weights 악세사리 모델경로 --img-size 320 --line-thickness 1 --conf-thres 0.1 --source ./person/crops/  --augment --project ./ --name accessory')

        print("파일경로 : " + self.file_path.text())
        print('상의 : ' + self.up.currentText() + '상의 색깔 : ' + self.up_color.currentText())
        print('하의 : ' + self.down.currentText() + '하의 색깔 : ' + self.down_color.currentText())

    def reset_dialog(self):
        _translate = QtCore.QCoreApplication.translate
        self.file_path.setText(_translate("Dialog", "FILE_PATH"))
        self.up.setCurrentIndex(0)
        self.up_color.setCurrentIndex(0)
        self.down.setCurrentIndex(0)
        self.down_color.setCurrentIndex(0)

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())

